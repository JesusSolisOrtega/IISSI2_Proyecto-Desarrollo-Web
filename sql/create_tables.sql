DROP table if EXISTS Followers;
DROP TABLE if EXISTS Photos_Categories;
DROP TABLE if EXISTS ForbiddenWords;
DROP TABLE if EXISTS Ratings;
DROP TABLE if EXISTS Categories;
DROP TABLE if EXISTS Comments;
DROP TABLE IF EXISTS Photos;
DROP TABLE IF EXISTS Users;


CREATE TABLE Users (
	userId INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	firstName VARCHAR(128) NOT NULL,
	lastName VARCHAR(128) NOT NULL,
	telephone VARCHAR(32) NOT NULL,
	email VARCHAR(128) UNIQUE NOT NULL,
	username VARCHAR(64) UNIQUE NOT NULL,
	password VARCHAR(256) NOT NULL,
	avatarUrl VARCHAR(512)
);

CREATE TABLE Photos (
	photoId INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	title VARCHAR(128) NOT NULL,
	description VARCHAR(512) NOT NULL,
	date DATETIME DEFAULT CURRENT_TIMESTAMP,
	url VARCHAR(512) NOT NULL,
	visibility VARCHAR(16) NOT NULL,
	userId INT NOT NULL,
	FOREIGN KEY (userId) REFERENCES Users (userId) ON DELETE CASCADE,
	CONSTRAINT ValidVisibility CHECK (visibility in ('Public', 'Private'))
);

CREATE TABLE Comments (
	commentId INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	commentary VARCHAR(256) NOT NULL,
	date DATETIME DEFAULT CURRENT_TIMESTAMP,
	photoId INT NOT NULL,
	userId INT NOT NULL,
	FOREIGN KEY(photoId) REFERENCES photos(photoId) ON DELETE CASCADE,
	FOREIGN KEY(userId) REFERENCES users(userId)
);

CREATE TABLE Categories (
	categoryId INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	category VARCHAR(64) UNIQUE NOT NULL
);

CREATE TABLE Ratings (
	ratingId INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	date DATETIME DEFAULT CURRENT_TIMESTAMP,
	rating INT NOT NULL,
	photoId INT NOT NULL,
	userId INT NOT NULL,
	UNIQUE(photoId, userId),
	FOREIGN KEY(photoId) REFERENCES photos(photoId) ON DELETE CASCADE,
	FOREIGN KEY(userId) REFERENCES users(userId) ON DELETE CASCADE
);

CREATE TABLE ForbiddenWords (
	wordId INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	word VARCHAR(32)
);

CREATE TABLE Photos_Categories (
	Photo_categoryId INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	photoId INT NOT NULL,
	categoryId INT NOT NULL,
	UNIQUE(photoId, categoryId),
	FOREIGN KEY(photoId) REFERENCES photos(photoId) ON DELETE CASCADE,
	FOREIGN KEY(categoryId) REFERENCES categories (categoryId) ON DELETE CASCADE
);

CREATE TABLE Followers (
	followId INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	followerId INT NOT NULL,
	followedId INT NOT NULL,
	UNIQUE(followerId,followedId),
	FOREIGN KEY (followerId) REFERENCES users (userId) ON DELETE CASCADE,
	FOREIGN KEY (followedId) REFERENCES users (userId) ON DELETE CASCADE,
	CONSTRAINT noSelfFollow CHECK(followerId != followedId)
);